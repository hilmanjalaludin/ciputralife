/***
	update : 18-08-2015
	line : 364 - 390
***/
var sv ="1";
var uw = "2";
// define dependent field
 Ext.DOM._benefieceryEdit = {
	field :[
		 'EditBenefRelationshipTypeId', 
		 'EditBenefSalutationId', 
		 'EditBenefFirstName', 
		 'EditBenefLastName',
		 'EditBenefGenderId',
		 'EditBenefPercentage'
		],
		 
	chars : 'Be',
	code  : 0
 }	
 
 // define dependent field
 Ext.DOM._benefieceryAdd = {
	field :[
		 'AddBenefRelationshipTypeId', 
		 'AddBenefSalutationId', 
		 'AddBenefFirstName', 
		 'AddBenefLastName', 
		 'AddBenefGenderId', 
		 'AddBenefPercentage'
		],
		 
	chars : 'Be',
	code  : 0
 }
 
var Mandat_SurveyQuest = [];
var Mandat_SurveyAns = [];
var PayMethod = [];
var card_type;

 
/* @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */
Ext.DOM.Insured = {
	field :
	{
		InsuredIdentificationTypeId : { keys : false, warn : 'ID Type', number: false , clear: true},
		InsuredIdentificationNum : { keys : false, warn : 'ID No ', number: false, clear: true },
		InsuredRelationshipTypeId : { keys : false, warn : 'Relation', number: false, clear: true },
		InsuredSalutationId : { keys : false, warn : 'Title', number: false, clear: true },
		InsuredFirstName : { keys : false, warn : 'First Name ', number: false, clear: true },
		InsuredLastName : { keys : false, warn : 'Last Name', number: false, clear: true },
		InsuredGenderId : { keys : false, warn : 'Gender', number: false, clear: true },
		InsuredDOB : { keys : false, warn : 'DOB', number: false, clear: true },
		InsuredAge : { keys : false, warn : 'Age', number: true, clear: true },
		InsuredPayMode : { keys : false, warn : 'Payment Mode', number: false, clear: false },
		InsuredPlanType : { keys : false, warn : 'Plan Type', number: false, clear: false },
		InsuredPremi : { keys : false, warn : 'Premi', number: false, clear: true }
	},
		
	chars : 'Ho',		
	code  : 2
 }	
 
/* @ Ext /EUI  : frame work ready function 
 * @ def	   : payer object 	 
 */
 
 Ext.DOM.Payer = 
 {
	'PayerSalutationId' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerFirstName' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerLastName' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerGenderId' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerDOB' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerAddressLine1' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerIdentificationTypeId' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerIdentificationNum' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerMobilePhoneNum' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerCity' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerAddressLine2' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerHomePhoneNum' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerZipCode' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerAddressLine3' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerOfficePhoneNum' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerProvinceId' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerAddressLine4' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerCreditCardNum' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayersBankId' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerFaxNum' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerCreditCardExpDate' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'CreditCardTypeId' : { keys : false, warn : 'ID Type', number: false , clear: true },
	'PayerEmail': { keys : false, warn : 'ID Type', number: false , clear: true }
}

 
/* @ def 	:  HolderPlanType 
 *
 * @ triger : Pecah Policy
 * @ params : jika terjadi pecah polis
 */
 
Ext.DOM.FormBenefieceryEdit = function( checkbox, p)
{
	if( checkbox.checked )
	{
		for(var i in Ext.DOM._benefieceryEdit.field ){
			Ext.Cmp(Ext.DOM._benefieceryEdit.field[i]+"_"+p).disabled(false);
		}
	}
	else
	{
		for(var i in Ext.DOM._benefieceryEdit.field ) 
		{
			Ext.Cmp(Ext.DOM._benefieceryEdit.field[i]+"_"+p).disabled(true);
			if( Ext.Cmp(Ext.DOM._benefieceryEdit.field[2]+"_"+p).empty()){
				Ext.Cmp(Ext.DOM._benefieceryEdit.field[i]+"_"+p).setValue('');
			}
		}
	}
};
 
/* @ def 	:  HolderPlanType 
 *
 * @ triger : Pecah Policy
 * @ params : jika terjadi pecah polis
 */
 
Ext.DOM.FormBenefieceryAdd = function( checkbox, p)
{
	if( checkbox.checked )
	{
		for(var i in Ext.DOM._benefieceryAdd.field ){
			Ext.Cmp(Ext.DOM._benefieceryAdd.field[i]+"_"+p).disabled(false);
		}
	}
	else
	{
		for(var i in Ext.DOM._benefieceryAdd.field ) 
		{
			Ext.Cmp(Ext.DOM._benefieceryAdd.field[i]+"_"+p).disabled(true);
			if( Ext.Cmp(Ext.DOM._benefieceryAdd.field[2]+"_"+p).empty()){
				Ext.Cmp(Ext.DOM._benefieceryAdd.field[i]+"_"+p).setValue('');
			}
		}
	}
	
	Ext.DOM.PercentageAdd();
};
/* @ def 	:  HolderPlanType 
 *
 * @ triger : Pecah Policy
 * @ params : jika terjadi pecah polis
 */
 
 Ext.DOM.PercentageAdd = function() 
 {
	var _box = Ext.Cmp('AddBenefeciery').getName(), 
		_tot = 0, _percent = 100, 
		_percent_personal = 0 , 
		_totalsChecked = 0;
		
		for(var frm = 0; frm < _box.length; frm++ ) {
			if( _box[frm].checked ) 
			  _totalsChecked++;
		}
		
		_tot = 	parseInt( _percent ) / parseInt( _totalsChecked );
		
		for(var box = 0; box < _box.length; box++ ) 
		{
			if( _box[box].checked )
			{
				var position = _box[box].getAttribute('onclick').split(',')[1].replace(/\);/g, '');
				Ext.Cmp('AddBenefPercentage_' + position).setValue(_tot.toFixed(2)); 
			}	
		}		
 };

/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */

Ext.DOM.getPremi = function(opts) 
{
	if( Ext.Cmp('ProductId').empty() ){ Ext.Msg("Product ID is Empty").Info(); return false; }
	else if( Ext.Cmp('InsuredGroupPremi').empty() ){ Ext.Msg("Group Premi is Empty").Info(); return false; }
	else if( Ext.Cmp('InsuredAge').empty() ){ Ext.Msg("Age is Empty").Info(); return false; }
	else if( Ext.Cmp('InsuredAge').getValue()==0 ){ Ext.Msg("Age is Zero").Info(); return false; }
	else if( Ext.Cmp('InsuredPayMode').empty() ){ Ext.Msg("Payment Mode").Info(); return false; }
	else if( Ext.Cmp('InsuredPlanType').empty() ){ Ext.Msg("Product Plan").Info(); return false; }
	else
	{
		var JSnum =(	
					Ext.Ajax
					({ 
						url 	: '../class/class.SaveAxa.php', 
						method :'GET', 
						param 	: { 
							action		: '_get_premi', 
							PlanTypeId  : Ext.Cmp('InsuredPlanType').getValue(),
							PersonalAge	: Ext.Cmp('InsuredAge').getValue(),	
							PayModeId	: Ext.Cmp('InsuredPayMode').getValue(),
							ProductId	: Ext.Cmp('ProductId').getValue(),
							GroupPremi 	: Ext.Cmp('InsuredGroupPremi').getValue()
						}
					}).json()
			   );
			   
			Ext.Cmp('InsuredPremi').setValue(JSnum.personal_premi);  
			Ext.Cmp('InsuredPremi').disabled(true); 
	}	   
};


/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */

Ext.DOM.OnUnloadWindow = function()
{
	if( window.opener )
	{
		window.opener.Transaction();
	}
}
 
Ext.DOM.CloseSelfWindow = function(WinName) {	
	if( window.opener )
	{
		window.opener.Transaction(); 
		window.close(WinName);
	}	
}

/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */

Ext.DOM.ExtInsured=function()
{
var VAR_POST_DATA = [];
	VAR_POST_DATA['action'] = '_set_update_insured';
	VAR_POST_DATA['InsuredId'] = Ext.Cmp('InsuredId').getValue();
	VAR_POST_DATA['CustomerId'] = Ext.Cmp('CustomerId').getValue();
	VAR_POST_DATA['ProductId']  = Ext.Cmp('ProductId').getValue();
	
	Ext.Ajax
	({
		url 	: '../class/class.EditAxa.php', 
		method 	: 'POST',
		param 	: ( Ext.Join(new Array(VAR_POST_DATA, Ext.Serialize('form_edit_insured').getElement())).object() ),
		ERROR 	: function(e)
		{
		    var ERR = JSON.parse(e.target.responseText);
			if(ERR.success){
				Ext.Msg("Update Insured ").Success();
				Ext.DOM.CloseSelfWindow('WinEditInsured');
			}
			else{
				Ext.Msg("Update Insured ").Failed();
			}
		 
		}
	}).post();
}

/*
 * @ get all data date picker srializer 
 * @ is simple get data asumsion 
 */
 
Ext.DOM.ExtAddBenefiecery = function()
{
	var VAR_POST_DATA = [];
		VAR_POST_DATA['Add'] = Ext.Cmp('AddBenefeciery').getValue();
		VAR_POST_DATA['action'] = '_set_add_benefiecery';
		VAR_POST_DATA['InsuredId'] = Ext.Cmp('InsuredId').getValue();
		VAR_POST_DATA['CustomerId'] = Ext.Cmp('CustomerId').getValue();
		
	Ext.Ajax
	({
		url 	: '../class/class.EditAxa.php', 
		method 	: 'POST',
		param 	: ( Ext.Join( new Array( VAR_POST_DATA, (Ext.Cmp('AddBenefeciery').getChecked() ? Ext.Serialize('form_add_benefiecery').getElement():new Array()))).object() ),
		ERROR 	: function(e)
		{
			var ERR = JSON.parse(e.target.responseText);
			if(ERR.success){
				Ext.Msg("Add Benefiecery").Success();
				Ext.DOM.CloseSelfWindow('WinEditInsured');
			}
			else{
				Ext.Msg("Add Benefiecery ").Failed();
			}
		}
	}).post();
}


/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */

Ext.DOM.ExtUpdateBenefiecery = function()
{
var VAR_POST_DATA = [];
	VAR_POST_DATA['action'] = '_set_update_benefiecery';
	VAR_POST_DATA['Edit'] = Ext.Cmp('EditBenefeciery').getValue();
	VAR_POST_DATA['InsuredId'] = Ext.Cmp('InsuredId').getValue();
	VAR_POST_DATA['CustomerId'] = Ext.Cmp('CustomerId').getValue();
	
	Ext.Ajax
	({
			url 	: '../class/class.EditAxa.php', 
			method 	: 'POST',
			param 	: ( Ext.Join( new Array( VAR_POST_DATA, (Ext.Cmp('EditBenefeciery').getChecked() ? Ext.Serialize('form_edit_benefiecery').getElement():new Array()))).object() ),
			ERROR 	: function(e)
			{
			  var ERR = JSON.parse(e.target.responseText);
				if(ERR.success){
					Ext.Msg("Update Benefiecery").Success();
					Ext.DOM.CloseSelfWindow('WinEditInsured');
				}
				else{
					Ext.Msg("Update Benefiecery").Failed();
				}
			 
			}
	}).post();
}
/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */
Ext.DOM.UpdatePayer = function(){

var VAR_POST_DATA = [];
	VAR_POST_DATA['action'] = '_set_update_payers';
	VAR_POST_DATA['CustomerId'] = Ext.Cmp('CustomerId').getValue();
	VAR_POST_DATA['ProductId'] = Ext.Cmp('ProductId').getValue();
	
	Ext.Ajax
	({
			url 	: '../class/class.EditAxa.php', 
			method 	: 'POST',
			param 	: Ext.Join([VAR_POST_DATA, Ext.Serialize('form_edit_payers').getElement()]).object(),
			ERROR 	: function(e)
			{
			  var ERR = JSON.parse(e.target.responseText);
				if(ERR.success){
					Ext.Msg("Update Payer").Success();
					Ext.DOM.CloseSelfWindow('WinEditInsured');
				}
				else{
					Ext.Msg("Update Payer").Failed();
				}
			 
			}
	}).post();
	
}
//UpdateSurvey

/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */
Ext.DOM.UpdateSurvey = function()
{

if ( Ext.DOM.ValidSurvey() ) {
	alert("Please answer survey (red box area)");
	return false;
} 
else
{
	var VAR_POST_DATA = [];
		VAR_POST_DATA['action'] = '_set_update_survey';
		VAR_POST_DATA['CustomerId'] = Ext.Cmp('CustomerId').getValue();
		VAR_POST_DATA['ProductId'] = Ext.Cmp('ProductId').getValue();
		VAR_POST_DATA['questioner_type'] = sv;
		
		Ext.Ajax
		({
				url 	: '../class/class.EditAxa.php', 
				method 	: 'POST',
				param 	: Ext.Join([VAR_POST_DATA, Ext.Serialize('form_edit_survey').getElement()]).object(),
				ERROR 	: function(e)
				{
				  var ERR = JSON.parse(e.target.responseText);
					if(ERR.success){
						Ext.Msg("Update Survey").Success();
						Ext.DOM.CloseSelfWindow('WinEditSurvey');
					}
					else{
						Ext.Msg("Update Survey").Failed();
					}
				 
				}
		}).post();
}
}

/*** validasi survey **/
Ext.DOM.ValidSurvey = function()
{
	var red_mark=0;
	// console.log(Mandat_SurveyQuest);
	// console.log(Mandat_SurveyAns);
	for(var i in Mandat_SurveyQuest )
	{
			if(typeof Mandat_SurveyAns[i] === 'undefined') 
			{
				// Ext.Cmp(Ext.DOM._benefieceryAdd.field[2]+"_"+p).empty()
				// alert('survey_'+Mandat_SurveyQuest[i]);
				// alert(Ext.Cmp('survey_'+Mandat_SurveyQuest[i]).getValue());
				// alert(Ext.Cmp('survey_'+Mandat_SurveyQuest[i]).getValue());
				if(  Ext.Cmp('survey_'+Mandat_SurveyQuest[i]).getValue()=="" )
				{
					// alert("Please answer question");
					$("#ans_valid_"+Mandat_SurveyQuest[i]).css({"border":"2px solid #FF0000"});
					red_mark++;
				}
				else
				{
					$("#ans_valid_"+Mandat_SurveyQuest[i]).css({"border":"0px solid #000000"});
				}
			}
			else 
			{
				var checkans="";
				for(var j in Mandat_SurveyAns[i] )
				{
					checkans = checkans + Ext.Cmp('survey_'+Mandat_SurveyQuest[i]+'_'+Mandat_SurveyAns[i][j]).getValue();	
				}
				if ( checkans =="" )
				{
					// alert("Please answer question");
					$("#ans_valid_"+Mandat_SurveyQuest[i]).css({"border":"2px solid #FF0000"});
					red_mark++;
				}
				else
				{
					$("#ans_valid_"+Mandat_SurveyQuest[i]).css({"border":"0px solid #000000"});
				}
			}
			// alert(typeof Mandat_SurveyAns[i]);
			
	}
	// alert(red_mark);
	if(red_mark>0)
	{
		
		return true;
	}
	else
	{
		return false;
	}
}

/*** validasi rule ***/
 Ext.DOM.ValidRule = function ()
 {
	var callback = false;
	var question_valid = new Array();
	var valid_answer =(Ext.Ajax({ 
				url 	: '../class/class.SaveAxa.php', 
				method :'GET', 
				param 	: { 
					action	: '_getValidAnswer',
					ProductId : Ext.Cmp('ProductId').getValue()
					}
				}).json() );
	var except_question =(Ext.Ajax({ 
				url 	: '../class/class.SaveAxa.php', 
				method :'GET', 
				param 	: { 
					action	: '_getExceptQuestion',
					ProductId : Ext.Cmp('ProductId').getValue()
					}
				}).json() );
	// console.log(except_question);
	for ( var i in valid_answer.question )
	{
		
		// console.log("Question ke " );
		// console.log(i);
		// var questionid = valid_answer.question[i];
		
		// console.log(except_question[i]);
		// console.log("jawaban valid untuk pertanyaan "+i);
		
		// console.log(valid_answer.answer[i]);
		
		var a = valid_answer.answer[i];
		// console.log( (a));
		var all_ans = Ext.Cmp('survey_'+i).getValue();
		
		// console.log("Jawaban dari pertanyaan "+ i);
		// console.log( (all_ans) );
		
		// console.log("type variabel Jawaban dari pertanyaan "+ i);
		// console.log( typeof(all_ans) );
		
		// console.log("Panjang objek jawaban dari pertanyaan " + i);
		// console.log( typeof(all_ans) );
		if(all_ans.length==1)
		{
			var ans = String(all_ans);
		// console.log( a.indexOf( ans ) );
			if( a.indexOf(ans) == -1 )
			{
				// question_valid[i]=false;
				 if(typeof except_question[i] !='undefined')
				 {
					// console.log('survey_'+except_question[i]);
					// console.log(Ext.Cmp('survey_'+except_question[i]).getValue());
					var ex_select_user = Ext.Cmp('survey_'+except_question[i]).getValue();
					// console.log(ex_select_user.length);
					if(ex_select_user.length > 0 )
					{
						var b = valid_answer.answer[except_question[i]];
						for ( var s in ex_select_user )
						{
							// console.log( String(ex_select_user[s]) );
							// console.log( typeof ( String(ex_select_user[s]) ) );
							// console.log( b.indexOf(String(ex_select_user[s])) );
							if(b.indexOf(String(ex_select_user[s])) == -1)
							{
								
								callback=true;
								break;
									// console.log(callback);
							}
							else
							{
								callback=false;
								// console.log(callback);
							}
							
						}
					}
					else
					{
						callback=true;
						break;
					}
					
				 }
				 else
				 {
					callback=true;
					break;
				 }
			}
			else
			{
				// console.log(true);
				// question_valid[i]=true;
				// console.log(i);
				// question_valid.push={i:[true]};
				callback=false;
				// break;
			}
		// alert(valid_answer.question[i]);
		// for ( var j in valid_answer.answer[i] )
		// {
			// console.log(valid_answer.answer[i][j]);
		// }
		// alert('survey_'+
		}
		else
		{
			for ( var multi in all_ans )
			{
				
				if(a.indexOf(String(all_ans[multi])) == -1)
				{
					
					callback=true;
					break;
						// console.log(callback);
				}
				else
				{
					callback=false;
					// console.log(callback);
				}
				
			}
		}
	}
// console.log(question_valid);
	// for ( var q in question_valid )
	// {
		// if(question_valid[q] == false)
		// {
			// callback=true;
			// break;
		// }
		// else 
		// {
			// callback=false;
		// }
	// }
	// alert(Ext.Cmp('survey_44').getValue());
	return callback;
 }
 
 /** validasi uw kosong **/
Ext.DOM.UWEmpty = function()
{
	var empty = false;
	var question_uw =(Ext.Ajax({ 
				url 	: '../class/class.SaveAxa.php', 
				method :'GET', 
				param 	: { 
					action	: '_getUWQuestion',
					ProductId : Ext.Cmp('ProductId').getValue()
					}
				}).json() );
				// console.log(question_uw);
	for ( var i in question_uw )
	{
		// console.log(Ext.Cmp('survey_'+i).empty());
		// console.log('survey_'+i);
		if(Ext.Cmp('survey_'+i).empty())
		{
			empty = true;
		}
		else{
			empty = false;
			break;
		}
			
	}
	return empty;
	
}
 
//UpdateUnderwriting

/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */
Ext.DOM.UpdateUW = function(){

if ( Ext.DOM.ValidSurvey() ) {
	alert("Please answer underwriting (red box area)");
	return false;
} 
else if (  Ext.DOM.ValidRule() ) {
	alert("Rule is not Valid, please reject/cancel this policy !");
	return false;
}
else if ( Ext.DOM.UWEmpty() ) {
	alert("Underwriting is empty");
	return false;
}
else{
	var VAR_POST_DATA = [];
		VAR_POST_DATA['action'] = '_set_update_survey';
		VAR_POST_DATA['CustomerId'] = Ext.Cmp('CustomerId').getValue();
		VAR_POST_DATA['ProductId'] = Ext.Cmp('ProductId').getValue();
		VAR_POST_DATA['InsuredId'] = Ext.Cmp('InsuredId').getValue();
		VAR_POST_DATA['questioner_type'] = uw;
		// alert(VAR_POST_DATA['InsuredId']);
		Ext.Ajax
		({
				url 	: '../class/class.EditAxa.php', 
				method 	: 'POST',
				param 	: Ext.Join([VAR_POST_DATA, Ext.Serialize('form_edit_uw').getElement()]).object(),
				ERROR 	: function(e)
				{
				  var ERR = JSON.parse(e.target.responseText);
					if(ERR.success){
						Ext.Msg("Update Underwriting").Success();
						Ext.DOM.CloseSelfWindow('WinEditSurvey');
					}
					else{
						Ext.Msg("Update Underwriting").Failed();
					}
				 
				}
		}).post();
}


}
	
/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */

Ext.DOM.is_valid_payer = function(){
	
}

Ext.DOM.UpdateStatusIns = function()
{
	var StatusId = Ext.Cmp('StatusInsured').getValue();
	var InsuredId = Ext.Cmp('InsuredId').getValue();
	
	if(StatusId)
	{
		var JSnum =(	
			Ext.Ajax
			({ 
				url 	: '../class/class.SaveAxa.php', 
				method :'GET', 
				param 	: { 
					action		: '_update_qc',
					StatusId	: StatusId,
					InsuredId 	: InsuredId
				}
			}).json()
	   );
	   
	   if(JSnum.result)
	   {
			alert('Update status QC, success!');
			Ext.DOM.OnUnloadWindow();
	   }
	   else{
			alert('Update status QC, failed!');
			return false;
	   }
	}
	else{
		alert('Please choose status!');
		return false;
	}
}

/* 
 * @ Ext /EUI :	frame work ready function 
 * @ Will render on global definition 
 */
 
$(document).ready(function(){
	Mandat_SurveyQuest =(Ext.Ajax({ 
					url 	: '../class/class.SaveAxa.php', 
					method :'GET', 
					param 	: { 
					action	: '_get_mandat_quest',
					ProductId: Ext.Cmp('ProductId').getValue(),
							}
					}).json() );
					
	Mandat_SurveyAns =(Ext.Ajax({ 
					url 	: '../class/class.SaveAxa.php', 
					method :'GET', 
					param 	: { 
					action	: '_get_mandat_ans',
					ProductId: Ext.Cmp('ProductId').getValue(),
							}
					}).json() );
	PayMethod =( Ext.Ajax({ 
					url 	: '../class/class.SaveAxa.php', 
					method :'GET', 
					param 	: { action	: '_json_pay_method'}
				}).json() );
	card_type = Ext.Cmp("CreditCardTypeId").getValue();
	$("#tabs" ).tabs();
	$("#tabs ul" ).tabs().append("<li onclick=\"javascript:CloseSelfWindow('WinEditInsured');\" style=\"margin-top:2px;cursor:pointer;border:0px solid #ffffff;padding:1px;float:right;margin-right:10px;\" title=\"Exit\">"+
	  "<img src=\"../gambar/icon/cancel.png\"></li>");
	
	var HeightWindow = parseInt($(window).height()-150);
	if( HeightWindow )
	{
		$("#tabs-2").css({height : HeightWindow+"px","overflow":'auto'});
		$("#tabs-5").css({height : HeightWindow+"px","overflow":'auto'});
		$("#tabs-6").css({height : HeightWindow+"px","overflow":'auto'});
		$("#tabs-7").css({height : HeightWindow+"px","overflow":'auto'});
		$("#tabs-9").css({height : HeightWindow+"px","overflow":'auto'});
		$("#tabs-10").css({height : HeightWindow+"px","overflow":'auto'});
	}
/*
 * @ get all data date picker srializer 
 * @ is simple get data asumsion 
 */
 
 $(".date").datepicker
 ({
    buttonImage : '../gambar/calendar.gif',  buttonImageOnly : true, changeMonth : true, changeYear		: true, yearRange : '1945:2030', dateFormat : 'dd-mm-yy',
    onSelect : function(e)
   {
	var _a = $(this).attr("id"),  _b = _a.substring(0,2),  _c = e.split('-'), _d = _c[2]+'-'+_c[1]+'-'+_c[0];
	if( _c.length > 2 )
	{			
		if(_b != 'Ad')
		{
			if(_b != 'Ed')
			{
				var JSnum = ( Ext.Ajax({url:'../class/class.SaveAxa.php', method :'GET', param :{action :'_get_age', ProductId:Ext.Cmp("ProductId").getValue(), GroupPremi :Ext.Cmp("InsuredGroupPremi").getValue(),DOB: _d.trim()}}).json());
				if( JSnum.success )
				{
					Ext.Cmp('InsuredAge').setValue( JSnum.personal_age );
					Ext.Cmp("InsuredPremi").setValue(	
								Ext.Ajax({ 
									url 	: '../class/class.SaveAxa.php', 
									method :'GET', 
									param 	: { 
										action 		: '_get_premi', 
										ProductId	: Ext.Cmp("ProductId").getValue(),
										PersonalAge	: Ext.Cmp("InsuredAge").getValue(),
										PayModeId	: Ext.Cmp("InsuredPayMode").getValue(),
										PlanTypeId  : Ext.Cmp("InsuredPlanType").getValue(),
										GroupPremi  : Ext.Cmp("InsuredGroupPremi").getValue()
									}
								}).json().personal_premi
							);	
				}
				else
				{
					Ext.Msg(JSnum.Error).Error();
					Ext.Cmp('InsuredAge').setValue('');
					Ext.Cmp("InsuredPremi").setValue('')
				}
						
				Ext.Cmp('InsuredAge').disabled(true);
				Ext.Cmp("InsuredPremi").disabled(false);
			}
		}
	}
   }
  });
  Ext.Cmp('PayerPaymentType').listener({
        'onChange': function(e) {
			var PayType = Ext.Cmp('PayerPaymentType').getValue();
			for (var i in PayMethod.form) {
				if(PayType==i)
				{
					$( "#"+PayMethod.form[i] ).show();
				}
				else
				{
					$( "#"+PayMethod.form[i] ).hide();
				}
			}
			Ext.Ajax({
				url: '../class/class.SaveAxa.php',
				method: 'GET',
				param: {
					action: '_card_type_pay',
					Pay_Type :PayType
				}
			}).load("dyn_card_type");
			Ext.Cmp("CreditCardTypeId").setValue(card_type);
        }
    });
});

