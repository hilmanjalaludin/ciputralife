<?phprequire(dirname(__FILE__)."/../sisipan/sessions.php");require(dirname(__FILE__)."/../fungsi/global.php");require(dirname(__FILE__)."/../class/MYSQLConnect.php");require(dirname(__FILE__)."/../class/lib.form.php");/**  * attribut ftp configurtion by users   * @ ajmi project*/		class FTP_uploads extends mysql{	var $JP_Plugin;  function FTP_uploads()  {  	parent::__construct();	self::index();  }      /* function set style css **/function setCss(){?><!-- start: css -->	<style>		.select { border:1px solid #bbbbbb;width:160px;font-size:11px;height:22px;background-image:url('../gambar/input_bg.png');}		.input_text {border:1px solid #bbbbbb;width:250px;font-size:12px;height:18px;background-image:url('../gambar/input_bg.png');}		.input_box {border:1px solid #bbbbbb;width:70px;font-size:12px;height:18px;background-image:url('../gambar/input_bg.png');}				.text_header { text-align:right;color:#236777;font-weight:bold;}		.select_multiple { border:1px solid #dddddd;width:250px;font-size:11px;background-color:#fffccc;}		.textarea { font-family:Arial;color:blue;height:100px;border:1px solid #dddddd;width:250px;font-size:12px;background-color:#fffccc; }	</style><!-- stop: css --><?php }		    function index()  {	$this -> JP_Plugin = new jpForm(true);		if( $this -> havepost('action'))	{		switch($this -> escPost('action'))		{			case 'add_ftp_setting'  : $this -> FTP_add_setting(); break;			case 'del_ftp_setting'  : $this -> FTP_del_setting(); break;			case 'enb_ftp_setting'  : $this -> FTP_enb_setting(); break;			case 'dsb_ftp_setting'  : $this -> FTP_dsb_setting(); break;			case 'sav_ftp_setting'  : $this -> FTP_sav_setting(); break;			case 'edt_ftp_setting'  : $this -> FTP_edt_setting(); break;			case 'upd_ftp_setting'  : $this -> FTP_upd_setting(); break;			case 'atv_ftp_crontab'  : $this -> FTP_atv_crontab(); break;			case 'add_ftp_schedule' : $this -> FTP_sch_crontab(); break; 					}	}  }   function getSelectFile()  {	 $file_name_php = scandir('../php');	 foreach( $file_name_php as $k => $v )	 {				if( strlen($v)>4 )		{			$dirname_file = EXPLODE("/",dirname(__FILE__));			$string_file = '';			for($i=0; $i<(count($dirname_file)-1); $i++){				$string_file.= $dirname_file[$i].'/';			}						$act_file_ftp = $string_file."php/$v";			$datas[$act_file_ftp] = $v; 			}	 }	 return $datas;  }  /* FTP_sch_crontab **/function FTP_sch_crontab(){	self::setCss();	?>	<div class="box-shadow corner" style="border:1px solid #dddddd;margin-top:8px;margin-left:5px;margin-right:5px;">		<fieldset style="border:1px solid #dddddd;padding-top:20px;">			<legend> FTP :: Add Schedule </legend>			<table cellpadding="8px" cellspacing="0">				<tr>					<td class="text_header">Minute</td>					<td><?php $this -> JP_Plugin -> jpInput('minute','input_box'); ?></td>					<td rowspan="6" valign="top" style="padding-left:5px;">						<span>							<b><u>Format :  </u></b><br>							<table style="border:0px solid #eeeeee;"> 								<tr>									<td style="border:1px solid #eeeeee;background-color:#BBBFFF;color:green;height:24px;" align="center">Minute</td>									<td style="border:1px solid #eeeeee;background-color:#BBBFFF;color:green;height:24px;" align="center">Hour</td>									<td style="border:1px solid #eeeeee;background-color:#BBBFFF;color:green;height:24px;" align="center">Day of Month</td>									<td style="border:1px solid #eeeeee;background-color:#BBBFFF;color:green;height:24px;" align="center">Month</td>									<td style="border:1px solid #eeeeee;background-color:#BBBFFF;color:green;height:24px;" align="center">Day of Week</td>								</tr>									<tr>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;( 0 - 59 )&nbsp;</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;( 0 - 23 )&nbsp;</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;( 1 - 31 )&nbsp;</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;( 1 - 12 or Jan - Dec )&nbsp;</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;( 0 - 6 or Sun - Sat )&nbsp;</td>								</tr>									<tr>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;*</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;*</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;*</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;*</td>									<td style="border:1px solid #eeeeee;color:blue;height:24px;" align="center">&nbsp;*</td>								</tr>																	</table>						</span>					</td>				</tr>				<tr>					<td class="text_header"> Hour : </td>					<td><?php $this -> JP_Plugin -> jpInput('hour','input_box',NULL); ?></td>									</tr>				<tr>					<td class="text_header"> Days : </td>					<td><?php $this -> JP_Plugin -> jpInput('days','input_box',NULL); ?></td>									</tr>								<tr>					<td class="text_header"> Month : </td>					<td><?php $this -> JP_Plugin -> jpInput('month','input_box',NULL); ?></td>				</tr>								<tr>					<td class="text_header"> Weeks : </td>					<td><?php $this -> JP_Plugin -> jpInput('weeks','input_box',NULL); ?></td>				</tr>				<tr>					<td class="text_header"> Select File </td>					<td><?php $this -> JP_Plugin -> jpCombo('select_file','select',$this -> getSelectFile(),NULL, 'onchange="getFileSelection(this);"'); ?></td>									</tr>				<tr>					<td class="text_header"> File Action </td>					<td><?php $this -> JP_Plugin -> jpInput('file_action','input_box',NULL); ?></td>				</tr>				<tr>					<td class="text_header">&nbsp;</td>					<td><a href="javascript:void(0);" class="sbutton" onclick="FTP_schedule_save();"><span>&nbsp;Save </span></a></td>				</tr>			</table>		</fieldset> 			</div><?php}  /* FTP_atc_crontab **/ function FTP_atv_crontab() { 	$minute = ( $this -> havepost('minute')?$this -> escPost('minute'):'*'); 	$hour 	= ( $this -> havepost('hour')?$this -> escPost('hour'):'*'); 	$days 	= ( $this -> havepost('days')?$this -> escPost('days'):'*'); 	$month 	= ( $this -> havepost('month')?$this -> escPost('month'):'*'); 	$weeks 	= ( $this -> havepost('weeks')?$this -> escPost('weeks'):'*'); 		$file_action  = $this -> escPost('file_action');	$fp_file_name = dirname(__FILE__).'/../crontab/ctab';	$fp = fopen($fp_file_name, 'w') or die('Cannot open file:  '.$fp_file_name); 	if(!$fp) exit(0);	else	{		$crontab_format ="$minute $hour $days $month $weeks ";		$write_lin_text =$crontab_format."php $file_action\n";		fwrite($fp, $write_lin_text);		fclose($fp);	}		echo json_encode(array('result'=>1));}  /** FTP_edt_setting ***/ function FTP_upd_setting() {	$datas = array('result'=>0 );	$SQL_update['ftp_get_file'] = $this -> escPost('ftp_get_file'); 	$SQL_update['ftp_history_file'] = $this -> escPost('ftp_history_file'); 	$SQL_update['ftp_host'] = $this -> escPost('ftp_host');	$SQL_update['ftp_pasword'] = $this -> escPost('ftp_pasword');	$SQL_update['ftp_port'] = $this -> escPost('ftp_port');	$SQL_update['ftp_put_file'] = $this -> escPost('ftp_put_file');	$SQL_update['ftp_user'] = $this -> escPost('ftp_user');	$SQL_wheres['ftp_id'] = $this -> escPost('ftp_id');		if( $this -> set_mysql_update('tms_ftp_config', $SQL_update, $SQL_wheres) )	{		$datas = array( 'result'=>1 );		}		echo json_encode($datas); }  /*** FTP_sav_setting **/ function FTP_sav_setting() {	$datas = array( 'result'=>0 );	$SQL_insert['ftp_get_file'] = $this -> escPost('ftp_get_file'); 	$SQL_insert['ftp_history_file'] = $this -> escPost('ftp_history_file'); 	$SQL_insert['ftp_host'] = $this -> escPost('ftp_host');	$SQL_insert['ftp_pasword'] = $this -> escPost('ftp_pasword');	$SQL_insert['ftp_port'] = $this -> escPost('ftp_port');	$SQL_insert['ftp_put_file'] = $this -> escPost('ftp_put_file');	$SQL_insert['ftp_user'] = $this -> escPost('ftp_user'); 	if( $this -> set_mysql_insert('tms_ftp_config',$SQL_insert) )	{		$datas = array( 'result'=>1 );		}		echo json_encode($datas); }	      /** FTP_dsb_setting ***/ function FTP_enb_setting() {	$datas  = array('result'=>0);	$ftp_id = explode(",", $this -> escPost('ftp_id'));	$totals = 0;	foreach( $ftp_id as $keys => $ftp_id_value )	{		$sql = " UPDATE tms_ftp_config a SET a.ftp_flags=1 WHERE a.ftp_id='$ftp_id_value'";		if( $this -> execute($sql,__FILE__,__LINE__) )		{			$totals++;		}			}			if( $totals > 0 ) 	{		$datas = array('result'=>1);	}		echo json_encode($datas); }  /** FTP_dsb_setting ***/ function FTP_dsb_setting() {	$datas  = array('result'=>0);	$ftp_id = explode(",", $this -> escPost('ftp_id'));	$totals = 0;	foreach( $ftp_id as $keys => $ftp_id_value )	{		$sql = " UPDATE tms_ftp_config a SET a.ftp_flags=0 WHERE a.ftp_id='$ftp_id_value'";		if( $this -> execute($sql,__FILE__,__LINE__) )		{			$totals++;		}			}			if( $totals > 0 ) 	{		$datas = array('result'=>1);	}		echo json_encode($datas); } /** FTP_del_setting ****/ function FTP_del_setting() {	$datas = array('result'=>0);		$ftp_id = explode(",", $this -> escPost('ftp_id'));		$totals =0;	foreach( $ftp_id as $keys => $ftp_id_value )	{		$sql = "DELETE FROM tms_ftp_config WHERE ftp_id='$ftp_id_value'";		if( $this -> execute($sql,__FILE__,__LINE__) )		{			$totals++;		}			}			if( $totals > 0 ) 	{		$datas = array('result'=>1);	}		echo json_encode($datas);  }  /** private function FTP_result_rows ***/  private function FTP_result_rows() {	$sql = " SELECT * FROM tms_ftp_config a WHERE a.ftp_id = '".$this -> escPost('ftp_id')."'";	$qry = $this -> query($sql);	if( !$qry -> EOF() )	{		return $qry;	}	else		return null;	 } /* edit ftp etting **/  function FTP_edt_setting()  {		$FTP = $this -> FTP_result_rows();		self::setCss();   ?>		<div class="box-shadow corner" style="border:1px solid #dddddd;margin-top:8px;margin-left:5px;margin-right:5px;">		<fieldset style="border:1px solid #dddddd;padding-top:20px;">			<legend> FTP :: Edit Config </legend>			<input type="hidden" name="ftp_id" id="ftp_id" value="<?php echo $FTP -> result_get_value('ftp_id'); ?>">			<table cellpadding="8px">				<tr>					<td class="text_header">FTP Server : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_host','input_text', $FTP -> result_get_value('ftp_host')); ?></td>					<td class="text_header">FTP Remote Directory : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_get_file','input_text',$FTP -> result_get_value('ftp_get_file')); ?></td>									</tr>								<tr>					<td class="text_header">FTP Port : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_port','input_box', $FTP -> result_get_value('ftp_port')); ?></td>					<td class="text_header">FTP Destination Directory : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_put_file','input_text', $FTP -> result_get_value('ftp_put_file')); ?></td>				</tr>								<tr>					<td class="text_header">FTP User : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_user','input_text',$FTP -> result_get_value('ftp_user')); ?></td>					<td class="text_header">FTP History Directory : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_history_file','input_text',$FTP -> result_get_value('ftp_history_file')); ?></td>				</tr>								<tr>					<td class="text_header">FTP Password : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_pasword','input_text',$FTP -> result_get_value('ftp_pasword')); ?></td>				</tr>								<tr>					<td class="text_header">&nbsp;</td>					<td><a href="javascript:void(0);" class="sbutton" onclick="FTP_update();"><span>&nbsp;Update </span></a></td>				</tr>			</table>		</fieldset> 			</div>  <? }    function FTP_add_setting()  {	self::setCss();   ?>		<div class="box-shadow corner" style="border:1px solid #dddddd;margin-top:8px;margin-left:5px;margin-right:5px;">			<fieldset style="border:1px solid #dddddd;padding-top:20px;">			<legend> FTP :: Add Config </legend>			<table cellpadding="8px">				<tr>					<td class="text_header">FTP Server : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_host','input_text'); ?></td>					<td class="text_header">FTP Remote Directory : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_get_file','input_text'); ?></td>									</tr>								<tr>					<td class="text_header">FTP Port : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_port','input_box'); ?></td>					<td class="text_header">FTP Destination Directory : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_put_file','input_text'); ?></td>				</tr>								<tr>					<td class="text_header">FTP User : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_user','input_text'); ?></td>					<td class="text_header">FTP History Directory : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_history_file','input_text'); ?></td>				</tr>								<tr>					<td class="text_header">FTP Password : </td>					<td><?php $this -> JP_Plugin -> jpInput('ftp_pasword','input_text'); ?></td>				</tr>								<tr>					<td class="text_header">&nbsp;</td>					<td><a href="javascript:void(0);" class="sbutton" onclick="FTP_save();"><span>&nbsp;Save </span></a></td>				</tr>			</table>			</fieldset>		</div>  <? }  }new FTP_uploads();?>