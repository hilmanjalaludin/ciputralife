<?php/**** START OF CLASS ********************************************* * FixedWidth : class get eXplode fixed-width data * author : omens<jombi_par@yahoo.com>  * created : 2013-08-20 * subject : AJMI project asurance * source -> http://rahmatvinacerpus.wordpress.com*/class FixedWidth{	private $Definer;	private $Filename;	private $RawsData;	private $Koordinat;/**  *	Aksessor class **/	public function FixedWidth( $Filename = NULL, $Definer = array() )	{		if( $Filename != NULL )		{			$this -> Definer  = $Definer;			$this -> Filename = $Filename;						if( ($this -> Filename!='') && ($this -> Filename != NULL) )			{				self::Process(); 			}		}		}	/**  *	get count of columns definition to explode   *  return ::  Integer**/	public function CountColumns()	{		if( is_array($this -> Definer)) return count($this -> Definer);		else			return 0;	}		/**  *	get filename on process *  return ::  string of file name**/	public function Filename()	{		if( !empty($this -> Filename)) return $this -> Filename;		else			return null;	}	/**  *	get column header definition    *  return :: array();**/	public function Definer()	{		if( is_array($this -> Definer) ) return $this -> Definer;		else			return array();	}	/**  *	get koordinating position line of serach  *	debuging data explode of process  *  return :: string / Text HTML**/		public function Koordinat()	{		if( !empty( $this -> Koordinat )) return $this -> Koordinat;		else			return null;				}		/** get raws data after explode on 	return::array()**/		public function RawsData()	{		if( is_array( $this -> RawsData ) )  return $this -> RawsData;		else			return array();	}		/** get raws data after explode on 	return::array()**/		public function CountLines()	{		if( is_array( $this -> RawsData ) )  			return count($this -> RawsData);		else			return array();	}		/** get raws data after explode on 	return::array()**/		public function value($line=0, $name=NULL )	{		if( $name !=NULL)		{			if( is_array($this -> RawsData ) )			{				return $this -> RawsData[$line][$name];			}			}	}		/**   * starting process explode data   * starting main of class   * return::void(0)  */		public function Process()	{		$file_handle = fopen( $this -> Filename, "r");		$rows = 0;		while( !feof($file_handle ) ) 		{			$line_of_text = fgets($file_handle);			$start = 0; $sz = 0;			for( $y=0; $y<count( $this -> Definer ); $y++)			{				if( ($sz == 0)) {					$start = 0;					$this -> RawsData[$rows][$this -> Definer[$y]['cols']] = trim(substr($line_of_text, $start, $this -> Definer[$y]['limit']));					$this -> Koordinat.=" Koordinat ( X = 'start' , Y = 'limit' ) => ( {$start} , {$this -> Definer[$y]['limit']} )<br>";				}				else{					$start = ($this -> Definer[$y-1]['limit']+$start);					$this -> RawsData[$rows][$this -> Definer[$y]['cols']] = trim(substr($line_of_text, $start, $this -> Definer[$y]['limit']));					$this -> Koordinat.=" Koordinat ( X = 'start' , Y = 'limit' ) => ( {$start} , {$this -> Definer[$y]['limit']} )<br>";				}					$sz++;			}						$rows++;			$this -> Koordinat.=" <hr>";		}	}}/**** END OF CLASS :: THANK'S GOD *****************************************************************//** example : definer columns ***/// $row = array	// (		// 0  => array('cols' => 'customer_number' 	  , 'limit' => 20),		// 1  => array('cols' => 'customer_name' 		  , 'limit' => 40),		// 2  => array('cols' => 'customer_mobile_phone' , 'limit' => 15),		// 3  => array('cols' => 'customer_office_phone' , 'limit' => 15),		// 4  => array('cols' => 'customer_home_phone'   , 'limit' => 15),		// 5  => array('cols' => 'customer_dob'   		  , 'limit' => 8),		// 6  => array('cols' => 'customer_gender' 	  , 'limit' => 1),		// 7  => array('cols' => 'customer_office_name'  , 'limit' => 40),		// 8  => array('cols' => 'customer_address1' 	  , 'limit' => 40),		// 9  => array('cols' => 'customer_address2' 	  , 'limit' => 40),		// 10 => array('cols' => 'customer_address3' 	  , 'limit' => 40),		// 11 => array('cols' => 'customer_address4' 	  , 'limit' => 40),		// 12 => array('cols' => 'customer_city' 		  , 'limit' => 40),		// 13 => array('cols' => 'customer_zipcode' 	  , 'limit' => 10),		// 14 => array('cols' => 'customer_cardtype' 	  , 'limit' => 20)	// );	/**  call class methode *****************************************************/ // $FixedWidth = new FixedWidth('MCS_AJMLC1N.txt', $row);	 // echo $FixedWidth -> Koordinat(); // Koordinat // echo $FixedWidth -> Filename();  // filename  